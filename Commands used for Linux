##Downloading the ref genome

wget -c https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz

gunzip hg38.fa.gz

#### Alignment contains two steps
#A. Creation of Indexed genome

bwa index -a bwtsw hg38.fa


##Data downloading

wget -c ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR146/073/SRR14634773/SRR14634773_1.fastq.gz

wget -c ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR146/073/SRR14634773/SRR14634773_2.fastq.gz

gunzip *.gz

##Quality Control using FastQC

fastqc *.fastq
fastqc SRR15299556_1.fastq SRR15299556_2.fastq      

##Trimming if need(fastp)
NOT NEED HERE

#aalignment contains two steps
1. creation of index refrence genome
bwa index -a bwtsw hg38.fa

2. aligning the read to index genome (MEM = maximal Exact matches)
bwa mem -t 2 s hg38.fa  SRR14634773_1.fastq  SRR14634773_2.fastq > bwa_SRR14634773.bam

#bam into sorted bam
samtools sort bwa_SRR14634773.bam > sorted_SRR14634773.bam

#to remove duplicated
samtools rmdup -sS sorted_SRR14634773.bam rmdup_SRR14634773.bam

#A. convert ref genome with picard-tool format
picard-tools CreateSequenceDictionary R=hg38.fa O=hg38.dict

#B. convert the unique alignment file/ input bam file into picard-tool format
picard-tools AddOrReplaceReadGroups I=rmdup_SRR14634773.bam O=picardoutput.bam RGLB=lib1 RGPL=illumina RGPU=unit1 RGSM=SRR14634773 SORT_ORDER=coordinate CREATE_INDEX=true VALIDATION_STRINGENCY=LENIENT

#C. variation calling using GATK Haplotypecaller algorithm for germline variation 
samtools faidx hg38.fa (#manual generation of index file for refrence genome)
java -jar /mnt/d/DrOmicsClass/TOOLS/gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar HaplotypeCaller -R hg38.fa -I picard_output.bam -O GTAK_variation_calling.vcf

##Variation filetration 
cat GTAK_variation_calling.vcf | java -jar /mnt/d/DrOmicsClass/TOOLS/snpEff/SnpSift.jar filter "(( QUAL>=30) & (DP>=10) & (MQ>=30))" > snpSift_output.vcf


[FOR VARIATION CALLING: one can use either GATK or SAMTOOLS)

1.(#VARIATION CALLING using SAMTOOLS(output: BCF))
bcftools mpileup -f hg38.fa rmdup_SRR14634773.bam > bcftools_variation_output 
#samtools mpileup -uf reference.fa aligned_sorted.bam | bcftools call -vmO z -o variants.vcf.gz
#samtools mpileup -uf genome.fa sampleA.sorted.bam | bcftools call -vmO v -o sampleA.vcf --threads 2


2. #Conversion of BCF into VCF(bcftools) 
bcftools call -c -v bcftools_variation_output > bcftools_variation_output.vcf


3. ##Variation filetration 
cat bcftools_variation_output.vcf | java -jar /mnt/d/DrOmicsClass/TOOLS/snpEff/SnpSift.jar filter "(( QUAL>=30) & (DP>=10) & (MQ>=30))" > bcftools_snpSift_outputt.vcf
